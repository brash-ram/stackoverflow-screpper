version: '3.8'

networks:
    backend:

services:

    bot:
        container_name: bot_container
        image: bot_image
        build:
            context: .
            dockerfile: ./bot/Dockerfile
        ports:
            - "8080:8080"
        environment:
            BOT_TOKEN: ${BOT_TOKEN}
            SCRAPPER_URL: "http://scrapper:8081"
            RABBIT_HOST: "rabbitmq"
        networks:
            - backend
        deploy:
            restart_policy:
                delay: 5s
                condition: on-failure
                max_attempts: 5

    scrapper:
        container_name: scrapper_container
        image: scrapper_image
        build:
            context: .
            dockerfile: ./scrapper/Dockerfile
        ports:
            - "8081:8081"
        environment:
            GITHUB_TOKEN: ${GITHUB_TOKEN}
            DB_URL: "jdbc:postgresql://postgres:5432/scrapper"
            BOT_URL: "http://bot:8080"
            RABBIT_HOST: "rabbitmq"
        networks:
            - backend
        deploy:
            restart_policy:
                delay: 5s
                condition: on-failure
                max_attempts: 5

    postgres:
        container_name: postgres_container
        image: postgres
        environment:
            POSTGRES_DB: "scrapper"
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "qwerty"
        volumes:
            - ./volumes/2. Init Database:/docker-entrypoint-initdb.d
            - ./volumes/postgres-data:/var/lib/postgresql/data
        networks:
            - backend
        ports:
            - "5434:5432"
        restart: unless-stopped
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 20s
            timeout: 5s
            retries: 5
            start_period: 10s

    liquibase-migrations:
        image: liquibase/liquibase:4.18
        depends_on:
            - postgres
        restart: on-failure
        command:
            - --hub-mode=off
            - --changelog-file=master.xml
            - --driver=org.postgresql.Driver
            - --url=jdbc:postgresql://postgres:5432/scrapper
            - --username=postgres
            - --password=qwerty
            - update
        volumes:
            - ./migrations:/liquibase/changelog
        networks:
            - backend
    rabbitmq:
        image: rabbitmq:3-management
        restart: always
        environment:
            - RABBITMQ_DEFAULT_USER=user
            - RABBITMQ_DEFAULT_PASS=qwerty
        volumes:
            - ./volumes/rabbitmq:/var/lib/rabbitmq
        ports:
            - "15672:15672"
            - "5672:5672"
        networks:
            - backend
